[tool.poetry]
name = "pgmq-sqlalchemy"
version = "0.1.0"
description = "More flexible PGMQ Postgres extension Python client that using sqlalchemy ORM, supporting both async and sync engines, sessionmakers or built from dsn." 
authors = ["jason810496 <810496@email.wlsh.tyc.edu.tw>"]
license = "MIT"
readme = "README.md"
keywords = ["pgmq","PGMQ","sqlalchemy","SQLAlchemy","tembo_pgmq_python"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]

[tool.poetry.urls]
"Homepage" = "https://github.com/jason810496/pgmq-sqlalchemy"
"Repository" = "https://github.com/jason810496/pgmq-sqlalchemy"
"Documentation" = "https://pgmq-sqlalchemy.readthedocs.io/en/latest/"

[tool.poetry.extras]
asyncpg = ["asyncpg"]
pg8000 = ["pg8000"]
psycopg = ["psycopg"]
psycopg2-binary = ["psycopg2-binary"]
psycopg2cffi = ["psycopg2cffi"]


[tool.poetry.dependencies]
python = "^3.9"
SQLAlchemy = "^2.0.31"

[tool.poetry.group.dev.dependencies]
# postgresql drivers 
asyncpg = "^0.29.0"
greenlet = "^3.0.3"
pg8000 = "^1.31.2"
psycopg = "^3.2.1"
psycopg2-binary = "^2.9.9"
psycopg2cffi = "^2.9.0"
# testing
pytest = "7.4.4"
pytest-lazy-fixture = "^0.6.3"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.6.1"
filelock = "^3.15.4"
# docs
sphinx = "^7.3.7"
sphinx-autobuild = "^2024.4.16"
sphinx-rtd-theme = "^2.0.0"
sphinx-copybutton = "^0.5.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
